<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>tofl</title>
        <link>https://example.com/</link>
        <description>MemE is a powerful and highly customizable GoHugo theme for personal blogs.</description>
        <generator>Hugo 0.64.1 https://gohugo.io/</generator>
        
            <language>en</language>
        
        
        
        
            <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
        
        <lastBuildDate>Mon, 06 Apr 2020 16:59:32 +0200</lastBuildDate>
        
            <atom:link rel="self" type="application/rss+xml" href="https://example.com/rss.xml" />
        
        
            <item>
                <title>Install Highstock in a VueJS application using Highcharts</title>
                <link>https://example.com/highcharts-highstock-vuejs-tutorial/</link>
                <guid isPermaLink="true">https://example.com/highcharts-highstock-vuejs-tutorial/</guid>
                <pubDate>Mon, 06 Apr 2020 16:51:13 +0200</pubDate>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description><![CDATA[<p><strong>Prerequisite</strong>: before reading this tutorial, you need to know how <a href="https://tofl.github.io/how-to-use-highcharts-vue-js/">to install, set up and use Highcharts in a VueJS project</a>.</p>
<h3 id="using-a-stock-chart-when-highcharts-is-registered-locally">Using a stock chart when Highcharts is registered locally</h3>
<p>If Highcharts is registered locally in the component you want to dislay a chart in, then you&rsquo;ll have to import the necessary modules at the beginning of your component&rsquo;s <code>&lt;script&gt;</code> part:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kr">import</span> <span class="p">{</span> <span class="nx">Chart</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;highcharts-vue&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">Highcharts</span> <span class="nx">from</span> <span class="s1">&#39;highcharts&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">stockInit</span> <span class="nx">from</span> <span class="s1">&#39;highcharts/modules/stock&#39;</span><span class="p">;</span>

<span class="nx">stockInit</span><span class="p">(</span><span class="nx">Highcharts</span><span class="p">)</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="using-a-stock-chart-when-highcharts-is-registered-globally">Using a stock chart when Highcharts is registered globally</h3>
<p>If Highcharts is registered gloablly, then for the moment you <code>main.js</code> file should look like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kr">import</span> <span class="nx">HighchartsVue</span> <span class="nx">from</span> <span class="s1">&#39;highcharts-vue&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">Highcharts</span> <span class="nx">from</span> <span class="s1">&#39;highcharts&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">exportingInit</span> <span class="nx">from</span> <span class="s1">&#39;highcharts/modules/exporting&#39;</span><span class="p">;</span>

<span class="nx">exportingInit</span><span class="p">(</span><span class="nx">Highcharts</span><span class="p">)</span><span class="p">;</span>
<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">HighchartsVue</span><span class="p">,</span> <span class="p">{</span> <span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;chart&#39;</span> <span class="p">}</span><span class="p">)</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>To use HighStock, we&rsquo;ll have to import the <code>stockInit</code> function, a Highcharts module. Afterwards, <code>main.js</code> should look like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kr">import</span> <span class="nx">HighchartsVue</span> <span class="nx">from</span> <span class="s1">&#39;highcharts-vue&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">Highcharts</span> <span class="nx">from</span> <span class="s1">&#39;highcharts&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">exportingInit</span> <span class="nx">from</span> <span class="s1">&#39;highcharts/modules/exporting&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">stockInit</span> <span class="nx">from</span> <span class="s1">&#39;highcharts/modules/stock&#39;</span><span class="p">;</span> <span class="c1">// Import stockInit to use HighStock
</span><span class="c1"></span>
<span class="nx">stockInit</span><span class="p">(</span><span class="nx">Highcharts</span><span class="p">)</span><span class="p">;</span>
<span class="nx">exportingInit</span><span class="p">(</span><span class="nx">Highcharts</span><span class="p">)</span><span class="p">;</span>
<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">HighchartsVue</span><span class="p">,</span> <span class="p">{</span><span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;chart&#39;</span><span class="p">}</span><span class="p">)</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="create-a-new-stock-chart">Create a new stock chart</h3>
<p>To tell Highcharts that we want to display a stock chart, we need to define the <code>constructor-type</code> when calling the chart component in the template:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">chart</span> <span class="na">:constructor-type</span><span class="o">=</span><span class="s">&#34;&#39;stockChart&#39;&#34;</span> <span class="na">:options</span><span class="o">=</span><span class="s">&#34;chartOptions&#34;</span><span class="p"></span><span class="p">&gt;</span><span class="p">&lt;</span><span class="p">/</span><span class="nt">chart</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>Now let&rsquo;s define <code>chartOptions</code>.</p>
<p><code>chartOptions</code> will simply be an object defined in the <code>data</code> function of our component. For the sake of this example, we&rsquo;ll just create a candlestick chart, <a href="https://www.highcharts.com/stock/demo">but there are other possibilities</a>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">chartOptions</span><span class="o">:</span> <span class="p">{</span>
	<span class="nx">series</span><span class="o">:</span> <span class="p">[</span><span class="p">{</span>
		<span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;candlestick&#39;</span><span class="p">,</span>
		<span class="nx">data</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
	<span class="p">}</span><span class="p">]</span><span class="p">,</span>
<span class="p">}</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><p>Now of course we need some financial data. We&rsquo;ll get the JSON data from a Highcharts demo <a href="https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/new-intraday.json">at this address</a>.</p>
<p>To make the HTTP request, just install axios in your project:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">npm install axios
</code></pre></td></tr></table>
</div>
</div><p>Then import axios in the component:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kr">import</span> <span class="nx">axios</span> <span class="nx">from</span> <span class="s1">&#39;axios&#39;</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>We&rsquo;ll load the data in the <code>created</code> lifecycle hook, like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">created</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">axios</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/new-intraday.json&#39;</span><span class="p">)</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">chartOptions</span><span class="p">.</span><span class="nx">series</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">data</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">chartOptions</span><span class="p">.</span><span class="nx">series</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="s1">&#39;AAPL&#39;</span><span class="p">;</span>
	<span class="p">}</span><span class="p">)</span><span class="p">;</span>
<span class="p">}</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><p>If you have a look at the data returned from the HTTP request, you&rsquo;ll see it is in this order: <code>[date, open, high, low, close]</code>.</p>
<p>Now load your project in a web browser, and you should see something that looks like this:</p>
<p><img src="/Users/tomflitterman/Desktop/articles/images/highstock-1.png" alt="highstock example vuejs"></p>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://example.com/tags/vuejs/">vuejs</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>How to Use Highcharts With Vue</title>
                <link>https://example.com/how-to-use-highcharts-vue-js/</link>
                <guid isPermaLink="true">https://example.com/how-to-use-highcharts-vue-js/</guid>
                <pubDate>Mon, 06 Apr 2020 16:46:00 +0200</pubDate>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description><![CDATA[<p>In this article, we&rsquo;ll see how to install Highcharts for a Vue JS app, and how to use it. Please note that it only serves as an introduction, but if it is successful, I&rsquo;ll gladly write a tutorial that goes deeper in the configuration of Highcharts.</p>
<p>Highcharts is a very powerful Javascript library that allows us to easily create beautiful &amp; complex charts of all types.</p>
<h3 id="getting-started">Getting started</h3>
<p>We&rsquo;ll create a dummy project with Vue CLI for the purpose of this tutorial, using ESLint with Airbnb&rsquo;s configuration.</p>
<h3 id="install-the-dependencies">Install the dependencies</h3>
<p><a href="https://www.highcharts.com/">Highcharts</a> has a wrapper called <a href="https://github.com/highcharts/highcharts-vue">highcharts-vue</a>. You can install it using npm:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-sh" data-lang="sh">npm install highcharts-vue 
</code></pre></td></tr></table>
</div>
</div><p>It seems that the wrapper only offers an API to use Highcharts, but not Highcharts itself. So you&rsquo;ll also have to install it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-sh" data-lang="sh">npm install highcharts
</code></pre></td></tr></table>
</div>
</div><h3 id="importing-highcharts-locally-in-a-component">Importing Highcharts locally in a component</h3>
<p>You can use Highcharts in your components individually. It&rsquo;s very easy, just import it the component. For the sake of this example, we&rsquo;ll also define a dataset as in the official repo :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kr">import</span> <span class="p">{</span> <span class="nx">Chart</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;highcharts-vue&#39;</span><span class="p">;</span>

<span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;app&#39;</span><span class="p">,</span>
  <span class="nx">components</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">highcharts</span><span class="o">:</span> <span class="nx">Chart</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
  <span class="nx">data</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="nx">chartOptions</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">series</span><span class="o">:</span> <span class="p">[</span><span class="p">{</span>
          <span class="nx">data</span><span class="o">:</span> <span class="p">[</span><span class="mi">12</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">16</span><span class="p">]</span><span class="p">,</span>
        <span class="p">}</span><span class="p">]</span><span class="p">,</span>
      <span class="p">}</span><span class="p">,</span>
    <span class="p">}</span><span class="p">;</span>
  <span class="p">}</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><p>Then in the template:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">template</span><span class="p"></span><span class="p">&gt;</span>
	<span class="p">&lt;</span><span class="nt">highcharts</span> <span class="na">:options</span><span class="o">=</span><span class="s">&#34;chartOptions&#34;</span><span class="p"></span><span class="p">&gt;</span><span class="p">&lt;</span><span class="p">/</span><span class="nt">highcharts</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">template</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>You should now have a chart that looks like this:</p>
<p><img src="/Users/tomflitterman/Desktop/articles/images/highcharts-1.png" alt="basic chart"></p>
<h3 id="registering-globally">Registering globally</h3>
<p>To import Highcharts globaly, you&rsquo;ll have to add the following lines to main.js. Add the following lines :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kr">import</span> <span class="nx">HighchartsVue</span> <span class="nx">from</span> <span class="s1">&#39;highcharts-vue&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">Highcharts</span> <span class="nx">from</span> <span class="s1">&#39;highcharts&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">exportingInit</span> <span class="nx">from</span> <span class="s1">&#39;highcharts/modules/exporting&#39;</span><span class="p">;</span>

<span class="nx">exportingInit</span><span class="p">(</span><span class="nx">Highcharts</span><span class="p">)</span><span class="p">;</span>
<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">HighchartsVue</span><span class="p">,</span> <span class="p">{</span> <span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;chart&#39;</span> <span class="p">}</span><span class="p">)</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>In the last line, you tell Vue to use <code>HighchartsVue</code> that is imported just before, and it will be used in the templates under the name <code>chart</code>. The, in the template of any component, you&rsquo;ll just have to add the <code>&lt;chart&gt;</code> tag. No need to import any package or library from that component.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">chart</span> <span class="na">:options</span><span class="o">=</span><span class="s">&#34;chartOptions&#34;</span><span class="p"></span><span class="p">&gt;</span><span class="p">&lt;</span><span class="p">/</span><span class="nt">chart</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="configuring-the-chart">Configuring the chart</h3>
<p>There are lots of possible options to pass to the charts. This is just a preview, but please see Highcharts&rsquo; docs for more information. You can (and should) also have a look at <a href="https://www.highcharts.com/demo">the examples</a>.</p>
<p>The options will be contained in an object that will then be passed to the <code>:options</code> parameter like that: <code>&lt;highcharts :options=&quot;chartOptions&quot;&gt;&lt;/highcharts&gt;</code>.</p>
<h4 id="defining-the-data">Defining the data</h4>
<p>Say we want a chart that dislays the average monthly temperatures in France. We also want to define a name for this data. We&rsquo;ll do it this way:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">chartOptions</span><span class="o">:</span> <span class="p">{</span>
	<span class="nx">series</span><span class="o">:</span> <span class="p">[</span>
		<span class="p">{</span>
			<span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;France&#39;</span><span class="p">,</span>
			<span class="nx">data</span><span class="o">:</span> <span class="p">[</span><span class="mi">26</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">58</span><span class="p">,</span> <span class="mi">62</span><span class="p">,</span> <span class="mi">72</span><span class="p">,</span> <span class="mi">77</span><span class="p">,</span> <span class="mi">76</span><span class="p">,</span> <span class="mi">73</span><span class="p">,</span> <span class="mi">66</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">43</span><span class="p">]</span><span class="p">,</span>
		<span class="p">}</span><span class="p">,</span>
	<span class="p">]</span><span class="p">,</span>
<span class="p">}</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><p><code>series</code> is an array, and you can add as many as you wish:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">series</span><span class="o">:</span> <span class="p">[</span>
	<span class="p">{</span>
		<span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;France&#39;</span><span class="p">,</span>
		<span class="nx">data</span><span class="o">:</span> <span class="p">[</span><span class="mi">26</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">58</span><span class="p">,</span> <span class="mi">62</span><span class="p">,</span> <span class="mi">72</span><span class="p">,</span> <span class="mi">77</span><span class="p">,</span> <span class="mi">76</span><span class="p">,</span> <span class="mi">73</span><span class="p">,</span> <span class="mi">66</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">43</span><span class="p">]</span><span class="p">,</span>
	<span class="p">}</span><span class="p">,</span>
	<span class="p">{</span>
		<span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Germany&#39;</span><span class="p">,</span>
		<span class="nx">data</span><span class="o">:</span> <span class="p">[</span><span class="mi">33</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> <span class="mi">44</span><span class="p">,</span> <span class="mi">49</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">68</span><span class="p">,</span> <span class="mi">66</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">57</span><span class="p">,</span> <span class="mi">52</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span> <span class="mi">40</span><span class="p">]</span><span class="p">,</span>
	<span class="p">}</span><span class="p">,</span>
<span class="p">]</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="name-the-chart">Name the chart</h4>
<p>You can also add a title and a subtitle to the chart:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">chartOptions</span><span class="o">:</span> <span class="p">{</span>
	<span class="nx">title</span><span class="o">:</span> <span class="p">{</span>
		<span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Average monthly temperature&#39;</span><span class="p">,</span>
	<span class="p">}</span><span class="p">,</span>
	<span class="nx">subtitle</span><span class="o">:</span> <span class="p">{</span>
		<span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Values are in °F&#39;</span><span class="p">,</span>
	<span class="p">}</span><span class="p">,</span>
	<span class="p">...</span>
<span class="p">}</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="defining-the-axis">Defining the axis</h4>
<p>You can define the axis to give more meaning to your charts. Either rename the values, or simply give your axis a title like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">chartOptions</span><span class="o">:</span> <span class="p">{</span>
	<span class="p">...</span>
	<span class="nx">xAxis</span><span class="o">:</span> <span class="p">{</span>
		<span class="nx">title</span><span class="o">:</span> <span class="p">{</span>
			<span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Period&#39;</span><span class="p">,</span>
		<span class="p">}</span><span class="p">,</span>
		<span class="nx">categories</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;January&#39;</span><span class="p">,</span> <span class="s1">&#39;February&#39;</span><span class="p">,</span> <span class="s1">&#39;March&#39;</span><span class="p">,</span> <span class="s1">&#39;April&#39;</span><span class="p">,</span> <span class="s1">&#39;May&#39;</span><span class="p">,</span> <span class="s1">&#39;June&#39;</span><span class="p">,</span> <span class="s1">&#39;July&#39;</span><span class="p">,</span> <span class="s1">&#39;August&#39;</span><span class="p">,</span> <span class="s1">&#39;September&#39;</span><span class="p">,</span> <span class="s1">&#39;October&#39;</span><span class="p">,</span> <span class="s1">&#39;November&#39;</span><span class="p">,</span> <span class="s1">&#39;December&#39;</span><span class="p">]</span><span class="p">,</span>
	<span class="p">}</span><span class="p">,</span>
	<span class="nx">yAxis</span><span class="o">:</span> <span class="p">{</span>
		<span class="nx">title</span><span class="o">:</span> <span class="p">{</span>
			<span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Temperature (°F)&#39;</span><span class="p">,</span>
		<span class="p">}</span><span class="p">,</span>
	<span class="p">}</span><span class="p">,</span>
	<span class="p">...</span>
<span class="p">}</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="chart-type">Chart type</h4>
<p>Finally you can set the chart type with the <code>type</code> key. The default value is <code>line</code>. Let&rsquo;s change it for example to <code>bar</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">chartOptions</span><span class="o">:</span> <span class="p">{</span>
	<span class="nx">chart</span><span class="o">:</span> <span class="p">{</span>
		<span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;bar&#39;</span><span class="p">,</span>
	<span class="p">}</span><span class="p">,</span>
	<span class="p">...</span>
<span class="p">}</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="keep-going">Keep going</h4>
<p>The possibilities to customize your charts are <a href="https://api.highcharts.com/highcharts/">almost infinite</a>. You can easily change pretty much anything: the color of the lines, the position of the legend, the responsiveness of the charts, &hellip;</p>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://example.com/tags/vuejs/">vuejs</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>How to watch for changes in Vuex ?</title>
                <link>https://example.com/how-to-watch-for-changes-in-vuex/</link>
                <guid isPermaLink="true">https://example.com/how-to-watch-for-changes-in-vuex/</guid>
                <pubDate>Sun, 29 Mar 2020 03:58:59 +0200</pubDate>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description><![CDATA[<p>When using the Vuex in VueJS, it can be useful to watch for changes in the store. To do so, you can make use of <code>watch</code> method, like so :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="k">this</span><span class="p">.</span><span class="nx">$store</span><span class="p">.</span><span class="nx">watch</span><span class="p">(</span>
      <span class="nx">state</span> <span class="p">=&gt;</span> <span class="nx">state</span><span class="p">.</span><span class="nx">parameters</span><span class="p">,</span>
      <span class="p">(</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;The parameters have changed!&#39;</span><span class="p">)</span><span class="p">;</span>
      <span class="p">}</span><span class="p">,</span>
<span class="p">)</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>This will watch the <code>parameters</code> state key. Whenever it changes, the function from line 3 will be executed.</p>
<p>Note that you can also watch other things than directly the state, like getters for example :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="k">this</span><span class="p">.</span><span class="nx">$store</span><span class="p">.</span><span class="nx">watch</span><span class="p">(</span>
      <span class="p">(</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">$store</span><span class="p">.</span><span class="nx">getters</span><span class="p">.</span><span class="nx">userData</span><span class="p">,</span>
      <span class="p">(</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;The user data have changed&#39;</span><span class="p">)</span><span class="p">;</span>
      <span class="p">}</span><span class="p">,</span>
<span class="p">)</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>You can put the watchers in the <code>beforeCreate</code> lifecycle hook for example.</p>
]]></description>
                
                
                
                
                
                    
                        
                    
                
            </item>
        
            <item>
                <title>Add the locale at the root of the URL in VueJS (i18n)</title>
                <link>https://example.com/add-locale-root-url-vuejs-i18n/</link>
                <guid isPermaLink="true">https://example.com/add-locale-root-url-vuejs-i18n/</guid>
                <pubDate>Tue, 24 Mar 2020 22:05:01 +0100</pubDate>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description><![CDATA[<p>How to add the locale (&ldquo;en&rdquo;, &ldquo;fr&rdquo;, &hellip;) at the root of the URL in VueJS? There are several ways of doing it, so let’s review them.</p>
<p>We will try to achieve something like that :</p>
<blockquote>
<p>mysite.com/en/user/john</p>
</blockquote>
<p>Please note that we will be using Vue Router &amp; Vue-I18n for internationalization. You can still read this article if you don’t use these Vue plugins. It won’t stop you from getting the big picture and implementing these solutions in your app, but I strongly advise you to use these plugins anyway.</p>
<h2 id="project-setup">Project setup</h2>
<h3 id="vue-i18n">Vue-I18n</h3>
<p>First, install Vue-I18n. We&rsquo;ll use npm :</p>
<pre><code>npm install vue-i18n
</code></pre><p>Then create a <code>translations</code> directory inside <code>src</code>. The newly created folder will have an <code>index.js</code> file containing Vue-I18n&rsquo;s configuration. We will set the plugin so it lets the browser decide what the default language should be :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// translations/index.js
</span><span class="c1"></span>
<span class="kr">import</span> <span class="nx">Vue</span> <span class="nx">from</span> <span class="s1">&#39;vue&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">VueI18n</span> <span class="nx">from</span> <span class="s1">&#39;vue-i18n&#39;</span><span class="p">;</span>

<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">VueI18n</span><span class="p">)</span><span class="p">;</span>

<span class="kr">const</span> <span class="nx">messages</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">en</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">welcome</span><span class="o">:</span> <span class="s1">&#39;Welcome !&#39;</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
  <span class="nx">fr</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">welcome</span><span class="o">:</span> <span class="s1">&#39;Bienvenue !&#39;</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
<span class="p">}</span><span class="p">;</span>

<span class="kr">const</span> <span class="nx">authorisedLanguages</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;en&#39;</span><span class="p">,</span> <span class="s1">&#39;fr&#39;</span><span class="p">]</span><span class="p">;</span>
<span class="kr">const</span> <span class="nx">locale</span> <span class="o">=</span> <span class="nx">authorisedLanguages</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">language</span><span class="p">)</span> <span class="o">?</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">language</span> <span class="o">:</span> <span class="s1">&#39;en&#39;</span><span class="p">;</span>

<span class="kr">export</span> <span class="k">default</span> <span class="k">new</span> <span class="nx">VueI18n</span><span class="p">(</span><span class="p">{</span>
  <span class="nx">locale</span><span class="p">,</span>
  <span class="nx">fallbackLocale</span><span class="o">:</span> <span class="s1">&#39;en&#39;</span><span class="p">,</span> <span class="c1">// By default, the page is translated into english
</span><span class="c1"></span>  <span class="nx">messages</span><span class="p">,</span>
<span class="p">}</span><span class="p">)</span><span class="p">;</span>

</code></pre></td></tr></table>
</div>
</div><h3 id="vue-router">Vue Router</h3>
<p>For the moment this is pretty straightforward. Install the router with npm :</p>
<pre><code>npm install vue-router
</code></pre><p>Create a folder called <code>router</code> and inside of it an <code>index.js</code> file containing the following configuration :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// router/index.js
</span><span class="c1"></span>
<span class="kr">import</span> <span class="nx">Vue</span> <span class="nx">from</span> <span class="s1">&#39;vue&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">VueRouter</span> <span class="nx">from</span> <span class="s1">&#39;vue-router&#39;</span><span class="p">;</span>

<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">VueRouter</span><span class="p">)</span><span class="p">;</span>

<span class="kr">const</span> <span class="nx">routes</span> <span class="o">=</span> <span class="p">[</span><span class="p">]</span><span class="p">;</span>

<span class="kr">const</span> <span class="nx">router</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">VueRouter</span><span class="p">(</span><span class="p">{</span>
  <span class="nx">mode</span><span class="o">:</span> <span class="s1">&#39;history&#39;</span><span class="p">,</span>
  <span class="nx">routes</span><span class="p">,</span>
<span class="p">}</span><span class="p">)</span><span class="p">;</span>

<span class="kr">export</span> <span class="k">default</span> <span class="nx">router</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="link-it-all-together">Link it all together</h3>
<p>Now, inside <code>main.js</code>, you need to have your app configured that way :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// main.js
</span><span class="c1"></span>
<span class="kr">import</span> <span class="nx">Vue</span> <span class="nx">from</span> <span class="s1">&#39;vue&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">App</span> <span class="nx">from</span> <span class="s1">&#39;./App.vue&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">router</span> <span class="nx">from</span> <span class="s1">&#39;./router&#39;</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">i18n</span> <span class="nx">from</span> <span class="s1">&#39;./translations&#39;</span><span class="p">;</span>

<span class="nx">Vue</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">productionTip</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>

<span class="k">new</span> <span class="nx">Vue</span><span class="p">(</span><span class="p">{</span>
  <span class="nx">i18n</span><span class="p">,</span> <span class="c1">// ES6 for i18n: i18n,
</span><span class="c1"></span>  <span class="nx">router</span><span class="p">,</span>
  <span class="nx">render</span><span class="o">:</span> <span class="nx">h</span> <span class="p">=&gt;</span> <span class="nx">h</span><span class="p">(</span><span class="nx">App</span><span class="p">)</span><span class="p">,</span>
<span class="p">}</span><span class="p">)</span><span class="p">.</span><span class="nx">$mount</span><span class="p">(</span><span class="s1">&#39;#app&#39;</span><span class="p">)</span><span class="p">;</span>

</code></pre></td></tr></table>
</div>
</div><h2 id="adding-the-locale-in-the-url">Adding the locale in the URL</h2>
<p>Go back to the router&rsquo;s configuration file. We want to tell the router to redirect the users to <em>/:lang</em> (where <code>:lang</code> can be &ldquo;fr&rdquo; or &ldquo;en&rdquo; in our example) whenever they try to access / (the base route).</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// router.index.js
</span><span class="c1"></span>
<span class="kr">const</span> <span class="nx">routes</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/&#39;</span><span class="p">,</span>
    <span class="nx">redirect</span><span class="o">:</span> <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;lang&#39;</span> <span class="p">}</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
  <span class="p">{</span>
    <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/:lang&#39;</span><span class="p">,</span>
    <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;lang&#39;</span><span class="p">,</span>
    <span class="nx">component</span><span class="o">:</span> <span class="nx">Home</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
<span class="p">]</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>For the moment, the <code>Home</code> component will just contain some simple text provided with the translation:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="c">&lt;!--</span><span class="c"> Home.vue </span><span class="c">--&gt;</span>

<span class="p">&lt;</span><span class="nt">template</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;home&#34;</span><span class="p"></span><span class="p">&gt;</span>
  	 <span class="p">&lt;</span><span class="nt">h1</span><span class="p"></span><span class="p">&gt;</span>{{ $t(&#39;welcome&#39;) }}<span class="p">&lt;</span><span class="p">/</span><span class="nt">h1</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="p">/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">template</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>The Home component will be displayed but the URL won&rsquo;t be changed. That&rsquo;s because the router doesn&rsquo;t know what to do with the <code>lang</code> parameter. So we&rsquo;ll make use of the <a href="https://router.vuejs.org/guide/advanced/navigation-guards.html#per-route-guard"><code>beforeEnter</code> navigation guard</a> to tell it what value to give that parameter:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// router/index.js
</span><span class="c1"></span>
<span class="kr">import</span> <span class="nx">i18n</span> <span class="nx">from</span> <span class="s1">&#39;../translations&#39;</span><span class="p">;</span>

<span class="p">...</span>

<span class="p">{</span>
    <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/:lang&#39;</span><span class="p">,</span>
    <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;lang&#39;</span><span class="p">,</span>
    <span class="nx">component</span><span class="o">:</span> <span class="nx">Home</span><span class="p">,</span>
    <span class="nx">beforeEnter</span><span class="o">:</span> <span class="p">(</span><span class="nx">to</span><span class="p">,</span> <span class="nx">from</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
      <span class="kr">const</span> <span class="nx">locale</span> <span class="o">=</span> <span class="nx">to</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">lang</span><span class="p">;</span> <span class="c1">// Retrieve the current locale set in the URL
</span><span class="c1"></span>
      <span class="c1">// Check if the locale the user is trying to access is authorised.
</span><span class="c1"></span>      <span class="c1">// In a larger application that supports lots of languages, you may want to store
</span><span class="c1"></span>      <span class="c1">// all the locales in a separate array
</span><span class="c1"></span>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="s1">&#39;en&#39;</span><span class="p">,</span> <span class="s1">&#39;fr&#39;</span><span class="p">]</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">locale</span><span class="p">)</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="nx">i18n</span><span class="p">.</span><span class="nx">locale</span><span class="p">)</span><span class="p">;</span>
      <span class="p">}</span>

		<span class="c1">// Changing the language from the URl (either manually or with a link) is possible this way
</span><span class="c1"></span>      <span class="nx">i18n</span><span class="p">.</span><span class="nx">locale</span> <span class="o">=</span> <span class="nx">locale</span><span class="p">;</span>
      <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="p">)</span><span class="p">;</span>
    <span class="p">}</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><p>Now whenever the user wants to access the base of the site, he&rsquo;ll be redirected to /:lang where :lang is the default language. Also, if you add some translatable text in your User component, the text will be translated even if you switch the locale in the URL to fr. Try it !</p>
<h3 id="using-nested-routes">Using nested routes</h3>
<p>But that&rsquo;s not enough. We want our app to be more than just a single page that translates &ldquo;Welcome&rdquo; into french. There are many ways to structure an app. So let&rsquo;s see how we would configure our router in a real world application.</p>
<p>In this first case, let&rsquo;s pretend our app uses <a href="https://router.vuejs.org/guide/essentials/nested-routes.html">nested routes</a>, like that:</p>
<pre><code>/profile                              /posts
+------------------+                  +-----------------+
| Home             |                  | Home            |
| +--------------+ |                  | +-------------+ |
| | Profile      | |  +------------&gt;  | | Posts       | |
| |              | |                  | |             | |
| +--------------+ |                  | +-------------+ |
+------------------+                  +-----------------+
</code></pre><p>The idea is that <code>Home</code> will contain other components, like a menu that will be shared with <code>Profile</code> and <code>Posts</code>. Of course those last two components can also contain their own nested routes.</p>
<p>So, how do we do this? By providing our <code>lang</code> route with <a href="https://router.vuejs.org/guide/essentials/nested-routes.html">children</a>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// router/index.js
</span><span class="c1"></span>
<span class="p">{</span>
    <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/:lang&#39;</span><span class="p">,</span>
    <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;lang&#39;</span><span class="p">,</span>
    <span class="nx">component</span><span class="o">:</span> <span class="nx">Home</span><span class="p">,</span>
    <span class="nx">children</span><span class="o">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="nx">component</span><span class="o">:</span> <span class="nx">User</span> <span class="p">}</span><span class="p">,</span> <span class="c1">// This route will be accessible through /en/user or /fr/user
</span><span class="c1"></span>      <span class="p">{</span> <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;posts&#39;</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;posts&#39;</span><span class="p">,</span> <span class="nx">component</span><span class="o">:</span> <span class="nx">Posts</span> <span class="p">}</span><span class="p">,</span>
    <span class="p">]</span><span class="p">,</span>
    <span class="nx">beforeEnter</span><span class="o">:</span> <span class="p">(</span><span class="nx">to</span><span class="p">,</span> <span class="nx">from</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
      <span class="p">...</span>
    <span class="p">}</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
</code></pre></td></tr></table>
</div>
</div><p>Do not forget to add a router-view tag in the Home component&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="c">&lt;!--</span><span class="c"> Home.vue </span><span class="c">--&gt;</span>

<span class="p">&lt;</span><span class="nt">template</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;home&#34;</span><span class="p"></span><span class="p">&gt;</span>
  	 <span class="p">&lt;</span><span class="nt">h1</span><span class="p"></span><span class="p">&gt;</span>{{ $t(&#39;welcome&#39;) }}<span class="p">&lt;</span><span class="p">/</span><span class="nt">h1</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">router-view</span> <span class="p">/</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="p">/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">template</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>&hellip;and to add, of course, the two new components:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="c">&lt;!--</span><span class="c"> User.vue </span><span class="c">--&gt;</span>

<span class="p">&lt;</span><span class="nt">template</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;user&#34;</span><span class="p"></span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">h2</span><span class="p"></span><span class="p">&gt;</span>{{ $t(&#39;user&#39;) }}<span class="p">&lt;</span><span class="p">/</span><span class="nt">h2</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="p">/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">template</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="c">&lt;!--</span><span class="c"> Posts.vue </span><span class="c">--&gt;</span>

<span class="p">&lt;</span><span class="nt">template</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;posts&#34;</span><span class="p"></span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">h2</span><span class="p"></span><span class="p">&gt;</span>{{ $t(&#39;posts&#39;) }}<span class="p">&lt;</span><span class="p">/</span><span class="nt">h2</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="p">/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">template</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>Let&rsquo;s add the translation :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// translations/index.js
</span><span class="c1"></span>
<span class="kr">const</span> <span class="nx">messages</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">en</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">welcome</span><span class="o">:</span> <span class="s1">&#39;Welcome !&#39;</span><span class="p">,</span>
    <span class="nx">user</span><span class="o">:</span> <span class="s1">&#39;User profile&#39;</span><span class="p">,</span>
    <span class="nx">posts</span><span class="o">:</span> <span class="s1">&#39;Last posts&#39;</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
  <span class="nx">fr</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">welcome</span><span class="o">:</span> <span class="s1">&#39;Bienvenue !&#39;</span><span class="p">,</span>
    <span class="nx">user</span><span class="o">:</span> <span class="s1">&#39;Profil d\&#39;utilisateur&#39;</span><span class="p">,</span>
    <span class="nx">posts</span><span class="o">:</span> <span class="s1">&#39;Derniers messages&#39;</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
<span class="p">}</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>The app now works !</p>
<h3 id="so-what-about-sites-that-do-not-use-nested-routes-">So what about sites that do not use nested routes ?</h3>
<p>In the very simple app we&rsquo;ve just created, the user and the posts pages are both children of the Homepage. In lots of cases, we may want to make our pages more distinct, like this for example :</p>
<pre><code>/                                     /posts
+------------------+                  +-----------------+
| Home             |                  | Posts           |
|                  |                  |                 |
|                  |  +------------&gt;  |                 |
|                  |                  |                 |
|                  |                  |                 |
+------------------+                  +-----------------+

                                      /user
                                      +-----------------+
                                      | User            |
                                      |                 |
                      +------------&gt;  |                 |
                                      |                 |
                                      |                 |
                                      +-----------------+

</code></pre><p>It&rsquo;s actually quite simple. We&rsquo;ll have to remove the children array, and set up all the routes as siblings. Also, we&rsquo;ll use the <code>beforeEach()</code> safeguard, and it will be applied to the <code>router</code> variable.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kr">const</span> <span class="nx">routes</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/&#39;</span><span class="p">,</span>
    <span class="nx">redirect</span><span class="o">:</span> <span class="s1">&#39;lang&#39;</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
  <span class="p">{</span>
    <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/:lang&#39;</span><span class="p">,</span>
    <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;lang&#39;</span><span class="p">,</span>
    <span class="nx">component</span><span class="o">:</span> <span class="nx">Home</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
  <span class="p">{</span>
    <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/:lang/user&#39;</span><span class="p">,</span>
    <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;user&#39;</span><span class="p">,</span>
    <span class="nx">component</span><span class="o">:</span> <span class="nx">User</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
  <span class="p">{</span>
    <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/:lang/posts&#39;</span><span class="p">,</span>
    <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;posts&#39;</span><span class="p">,</span>
    <span class="nx">component</span><span class="o">:</span> <span class="nx">Posts</span><span class="p">,</span>
  <span class="p">}</span><span class="p">,</span>
<span class="p">]</span><span class="p">;</span>

<span class="kr">const</span> <span class="nx">router</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">VueRouter</span><span class="p">(</span><span class="p">{</span>
  <span class="nx">mode</span><span class="o">:</span> <span class="s1">&#39;history&#39;</span><span class="p">,</span>
  <span class="nx">routes</span><span class="p">,</span>
<span class="p">}</span><span class="p">)</span><span class="p">;</span>

<span class="nx">router</span><span class="p">.</span><span class="nx">beforeEach</span><span class="p">(</span><span class="p">(</span><span class="nx">to</span><span class="p">,</span> <span class="nx">from</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
  <span class="kr">const</span> <span class="nx">locale</span> <span class="o">=</span> <span class="nx">to</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">lang</span><span class="p">;</span> <span class="c1">// Retrieve the current locale set in the URL
</span><span class="c1"></span>
  <span class="c1">// Check if the locale the user is trying to access is authorised.
</span><span class="c1"></span>  <span class="c1">// In a larger application that supports lots of languages, you may want to store
</span><span class="c1"></span>  <span class="c1">// all the locales in a separate array
</span><span class="c1"></span>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="s1">&#39;en&#39;</span><span class="p">,</span> <span class="s1">&#39;fr&#39;</span><span class="p">]</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">locale</span><span class="p">)</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="nx">i18n</span><span class="p">.</span><span class="nx">locale</span><span class="p">)</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="c1">// Changing the language from the URl (either manually or with a link) is possible this way
</span><span class="c1"></span>  <span class="nx">i18n</span><span class="p">.</span><span class="nx">locale</span> <span class="o">=</span> <span class="nx">locale</span><span class="p">;</span>
  <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="p">)</span><span class="p">;</span>
<span class="p">}</span><span class="p">)</span><span class="p">;</span>

<span class="kr">export</span> <span class="k">default</span> <span class="nx">router</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>You can have access to the source code from the <a href="https://github.com/tofl/Vue-Translations">Github repository</a>.</p>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://example.com/tags/vuejs/">vuejs</category>
                                
                            
                        
                    
                
            </item>
        
    </channel>
</rss>
